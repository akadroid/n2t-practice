// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    RAM4K(in=in, load=DMuxOut0, address=address[0..11], out=RAM8Out0); // 8
    RAM4K(in=in, load=DMuxOut1, address=address[0..11], out=RAM8Out1); // 16
    RAM4K(in=in, load=DMuxOut2, address=address[0..11], out=RAM8Out2); // 24
    RAM4K(in=in, load=DMuxOut3, address=address[0..11], out=RAM8Out3); // 32

    DMux4Way(in=load, sel=address[12..13], a=DMuxOut0, b=DMuxOut1, c=DMuxOut2, d=DMuxOut3);
    Mux4Way16(a=RAM8Out0, b=RAM8Out1, c=RAM8Out2, d=RAM8Out3, sel=address[12..13], out=out);
}